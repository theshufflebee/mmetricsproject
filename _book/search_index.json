[["setup.html", "ASHR_SVAR 1 Setup 1.1 Load packages &amp; functions 1.2 Load Data", " ASHR_SVAR pte 2025-05-15 1 Setup 1.1 Load packages &amp; functions rm(list=ls()) require(tinytex) #LaTeX require(ggplot2) #plots require(AEC) #JP-Renne functions require(AER) #NW formula require(forecast) #time series stuff require(expm) #matrix exponents require(here) #directory finder require(stringr) # analysis of strings, important for the detection in tweets require(dplyr) #data management require(lubridate) #data dates management require(zoo) #for lagging require(jtools) #tables require(huxtable) #tables require(lmtest) #reg tests require(vroom) #for loading data require(data.table) #for data filtering require(sysid) #for ARMA-X modeling require(sandwhich) #regression errors require(stargazer) #nice reg tables require(tidytext) #text mining require(textstem) #lemmatization require(quanteda) #tokenization require(texreg) #arima tables require(vars) #VAR models require(xts) #time series objects require(tseries) #includes adf test require(quantmod) require(TSA) require(aTSA) require(tibble) require(FinTS) require(kableExtra) require(writexl) require(purrr) getwd() #setwd(&quot;...&quot;) -&gt; set wd at base repo folder #load helper functions source(here(&quot;helperfunctions/data_loaders.R&quot;)) source(here(&quot;helperfunctions/date_selector.R&quot;)) source(here(&quot;helperfunctions/plotters.R&quot;)) source(here(&quot;helperfunctions/quick_arma.R&quot;)) source(here(&quot;helperfunctions/r.vol_calculators.R&quot;)) source(here(&quot;helperfunctions/truths_cleaning_function.R&quot;)) source(here(&quot;helperfunctions/armax_functions.R&quot;)) source(here(&quot;helperfunctions/var_irf.R&quot;)) 1.2 Load Data #load final dataset source(here(&quot;helperfunctions/full_data.R&quot;)) #select timeframe Vdata = filter(data,between(timestamp, as.Date(&#39;2014-01-01&#39;), as.Date(&#39;2025-05-07&#39;))) "],["some-svar-estimations.html", "2 Some SVAR estimations 2.1 Dummy variable 2.2 Number of Post 2.3 Tariff 2.4 Trade", " 2 Some SVAR estimations (this is not an exhaustive list of our VAR estimations, you can find more by going on /modeling/VAR/VAR_SPY_TRUE or VAR_ASHR_TRUE or VAR_VGK_TRUE) 2.1 Dummy variable here we use a dummy variable which equal to one if Trump has made a post or 0 otherwise, taking into account the closed hour market posts. y = cbind(Vdata$dummy, Vdata$ASHR_vol) colnames(y)[1:2] &lt;- c(&quot;dummy&quot;, &quot;vol&quot;) est.VAR &lt;- VAR(y,p=6) mod_vol &lt;- est.VAR$varresult$vol screenreg(mod_vol, digits = 6) ## ## =========================== ## Model 1 ## --------------------------- ## dummy.l1 -0.000006 *** ## (0.000001) ## vol.l1 0.282482 *** ## (0.007140) ## dummy.l2 -0.000005 *** ## (0.000001) ## vol.l2 0.072926 *** ## (0.007410) ## dummy.l3 -0.000006 *** ## (0.000001) ## vol.l3 0.047892 *** ## (0.007418) ## dummy.l4 -0.000004 *** ## (0.000001) ## vol.l4 0.056084 *** ## (0.007416) ## dummy.l5 -0.000006 *** ## (0.000001) ## vol.l5 0.059763 *** ## (0.007410) ## dummy.l6 -0.000005 *** ## (0.000001) ## vol.l6 0.109466 *** ## (0.007136) ## const 0.000095 *** ## (0.000005) ## --------------------------- ## R^2 0.178208 ## Adj. R^2 0.177714 ## Num. obs. 19965 ## =========================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega &lt;- var(residuals(est.VAR)) #make the B matrix loss &lt;- function(param){ #Define the restriction B &lt;- matrix(c(param[1], param[2], 0, param[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X &lt;- Omega - B %*% t(B) #loss function loss &lt;- sum(X^2) return(loss) } res.opt &lt;- optim(c(1, 0, 1), loss, method = &quot;BFGS&quot;) B.hat &lt;- matrix(c(res.opt$par[1], res.opt$par[2], 0, res.opt$par[3]), ncol = 2) print(cbind(Omega,B.hat %*% t(B.hat))) ## dummy vol ## dummy 8.5222425009 1.968292e-04 8.5222418314 1.968705e-04 ## vol 0.0001968292 1.631171e-07 0.0001968705 2.428876e-05 #irf creation irf_res &lt;- irf(est.VAR, impulse = &quot;dummy&quot;, response = &quot;vol&quot;, bmat=b.hat, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf &lt;- extract_varirf(irf_res) #the plot single_varirf %&gt;% ggplot(aes(x=period, y=irf_dummy_vol, ymin=lower_dummy_vol, ymax=upper_dummy_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF Dummy on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does volatility Granger cause dummy mentions grangertest(y[,c(&quot;vol&quot;,&quot;dummy&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-64.060.000446 #does dummy mentions Granger cause volatility grangertest(y[,c(&quot;dummy&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-622.23.64e-26 2.2 Number of Post y2 = cbind(Vdata$N , Vdata$ASHR_vol) colnames(y2)[1:2] &lt;- c(&quot;N&quot;, &quot;vol&quot;) est.VAR2 &lt;- VAR(y2,p=6) mod_vol2 &lt;- est.VAR2$varresult$vol screenreg(mod_vol2, digits = 6) ## ## =========================== ## Model 1 ## --------------------------- ## N.l1 -0.000001 *** ## (0.000000) ## vol.l1 0.282497 *** ## (0.007132) ## N.l2 -0.000001 *** ## (0.000000) ## vol.l2 0.072640 *** ## (0.007403) ## N.l3 -0.000002 *** ## (0.000000) ## vol.l3 0.047738 *** ## (0.007409) ## N.l4 -0.000001 ** ## (0.000000) ## vol.l4 0.056237 *** ## (0.007408) ## N.l5 -0.000002 *** ## (0.000000) ## vol.l5 0.059528 *** ## (0.007403) ## N.l6 -0.000001 *** ## (0.000000) ## vol.l6 0.109380 *** ## (0.007128) ## const 0.000081 *** ## (0.000004) ## --------------------------- ## R^2 0.176168 ## Adj. R^2 0.175673 ## Num. obs. 19965 ## =========================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega2 &lt;- var(residuals(est.VAR2)) #make the B matrix loss2 &lt;- function(param2){ #Define the restriction B2 &lt;- matrix(c(param2[1], param2[2], 0, param2[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X2 &lt;- Omega2 - B2 %*% t(B2) #loss function loss2 &lt;- sum(X2^2) return(loss2) } res.opt2 &lt;- optim(c(1, 0, 1), loss2, method = &quot;BFGS&quot;) B.hat2 &lt;- matrix(c(res.opt2$par[1], res.opt2$par[2], 0, res.opt2$par[3]), ncol = 2) print(cbind(Omega2,B.hat2 %*% t(B.hat2))) ## N vol ## N 7.988455e+01 5.794262e-04 7.988455e+01 5.793217e-04 ## vol 5.794262e-04 1.635220e-07 5.793217e-04 3.880898e-07 #irf creation irf_res2 &lt;- irf(est.VAR2, impulse = &quot;N&quot;, response = &quot;vol&quot;, bmat=b.hat2, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf2 &lt;- extract_varirf(irf_res2) #the plot single_varirf2 %&gt;% ggplot(aes(x=period, y=irf_n_vol, ymin=lower_n_vol, ymax=upper_n_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF Number of Posts on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does volatility Granger cause N mentions grangertest(y2[,c(&quot;vol&quot;,&quot;N&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-63.170.00413 #does N mentions Granger cause volatility grangertest(y2[,c(&quot;N&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-613.98.02e-16 2.3 Tariff y3 = cbind(Vdata$tariff , Vdata$ASHR_vol) colnames(y3)[1:2] &lt;- c(&quot;tariff&quot;, &quot;vol&quot;) est.VAR3 &lt;- VAR(y3,p=6) mod_vol3 &lt;- est.VAR3$varresult$vol screenreg(mod_vol3, digits = 6) ## ## =========================== ## Model 1 ## --------------------------- ## tariff.l1 0.000002 ## (0.000008) ## vol.l1 0.280773 *** ## (0.007038) ## tariff.l2 -0.000000 ## (0.000008) ## vol.l2 0.072461 *** ## (0.007302) ## tariff.l3 -0.000010 ## (0.000008) ## vol.l3 0.045252 *** ## (0.007309) ## tariff.l4 -0.000005 ## (0.000008) ## vol.l4 0.056243 *** ## (0.007309) ## tariff.l5 -0.000005 ## (0.000008) ## vol.l5 0.056910 *** ## (0.007302) ## tariff.l6 -0.000008 ## (0.000008) ## vol.l6 0.109191 *** ## (0.007037) ## const 0.000061 *** ## (0.000003) ## --------------------------- ## R^2 0.172906 ## Adj. R^2 0.172409 ## Num. obs. 19965 ## =========================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega3 &lt;- var(residuals(est.VAR3)) #make the B matrix loss3 &lt;- function(param3){ #Define the restriction B3 &lt;- matrix(c(param3[1], param3[2], 0, param3[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X3 &lt;- Omega3 - B3 %*% t(B3) #loss function loss3 &lt;- sum(X3^2) return(loss3) } res.opt3 &lt;- optim(c(1, 0, 1), loss3, method = &quot;BFGS&quot;) B.hat3 &lt;- matrix(c(res.opt3$par[1], res.opt3$par[2], 0, res.opt3$par[3]), ncol = 2) print(cbind(Omega3,B.hat3 %*% t(B.hat3))) ## tariff vol ## tariff 1.437847e-01 1.743059e-06 1.437843e-01 1.794967e-06 ## vol 1.743059e-06 1.641694e-07 1.794967e-06 1.830018e-05 #irf creation irf_res3 &lt;- irf(est.VAR3, impulse = &quot;tariff&quot;, response = &quot;vol&quot;, bmat=b.hat3, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf3 &lt;- extract_varirf(irf_res3) #the plot single_varirf3 %&gt;% ggplot(aes(x=period, y=irf_tariff_vol, ymin=lower_tariff_vol, ymax=upper_tariff_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF Tariff on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does volatility Granger cause tariff mentions grangertest(y3[,c(&quot;vol&quot;,&quot;tariff&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-60.7220.632 #does tariff mentions Granger cause volatility grangertest(y3[,c(&quot;tariff&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-60.7150.638 2.4 Trade y4 = cbind(Vdata$trade , Vdata$ASHR_vol) colnames(y4)[1:2] &lt;- c(&quot;trade&quot;, &quot;vol&quot;) est.VAR4 &lt;- VAR(y4,p=6) mod_vol4 &lt;- est.VAR4$varresult$vol screenreg(mod_vol4, digits = 6) ## ## =========================== ## Model 1 ## --------------------------- ## trade.l1 -0.000025 * ## (0.000010) ## vol.l1 0.281371 *** ## (0.007039) ## trade.l2 0.000012 ## (0.000010) ## vol.l2 0.071544 *** ## (0.007306) ## trade.l3 -0.000019 ## (0.000010) ## vol.l3 0.045746 *** ## (0.007312) ## trade.l4 -0.000009 ## (0.000010) ## vol.l4 0.056738 *** ## (0.007316) ## trade.l5 -0.000013 ## (0.000010) ## vol.l5 0.056226 *** ## (0.007311) ## trade.l6 -0.000013 ## (0.000010) ## vol.l6 0.109845 *** ## (0.007043) ## const 0.000062 *** ## (0.000003) ## --------------------------- ## R^2 0.173422 ## Adj. R^2 0.172925 ## Num. obs. 19965 ## =========================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega4 &lt;- var(residuals(est.VAR4)) #make the B matrix loss4 &lt;- function(param4){ #Define the restriction B4 &lt;- matrix(c(param4[1], param4[2], 0, param4[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X4 &lt;- Omega4 - B4 %*% t(B4) #loss function loss4 &lt;- sum(X4^2) return(loss4) } res.opt4 &lt;- optim(c(1, 0, 1), loss4, method = &quot;BFGS&quot;) B.hat4 &lt;- matrix(c(res.opt4$par[1], res.opt4$par[2], 0, res.opt4$par[3]), ncol = 2) print(cbind(Omega4,B.hat4 %*% t(B.hat4))) ## trade vol ## trade 8.360782e-02 3.151165e-06 8.360540e-02 6.905593e-07 ## vol 3.151165e-06 1.640670e-07 6.905593e-07 4.318409e-05 #irf creation irf_res4 &lt;- irf(est.VAR4, impulse = &quot;trade&quot;, response = &quot;vol&quot;, bmat=b.hat4, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf4 &lt;- extract_varirf(irf_res4) #the plot single_varirf4 %&gt;% ggplot(aes(x=period, y=irf_trade_vol, ymin=lower_trade_vol, ymax=upper_trade_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF Trade on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does volatility Granger cause trade mentions grangertest(y4[,c(&quot;vol&quot;,&quot;trade&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-65.361.55e-05 #does trade mentions Granger cause volatility grangertest(y4[,c(&quot;trade&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-62.790.0103 "],["china.html", "3 China", " 3 China y5 = cbind(Vdata$china , Vdata$ASHR_vol) colnames(y5)[1:2] &lt;- c(&quot;china&quot;, &quot;vol&quot;) est.VAR5 &lt;- VAR(y5,p=6) mod_vol5 &lt;- est.VAR5$varresult$vol screenreg(mod_vol5, digits = 6) ## ## =========================== ## Model 1 ## --------------------------- ## china.l1 -0.000005 ## (0.000006) ## vol.l1 0.280637 *** ## (0.007040) ## china.l2 -0.000004 ## (0.000006) ## vol.l2 0.072261 *** ## (0.007305) ## china.l3 -0.000011 ## (0.000006) ## vol.l3 0.045298 *** ## (0.007312) ## china.l4 -0.000007 ## (0.000006) ## vol.l4 0.056264 *** ## (0.007312) ## china.l5 -0.000007 ## (0.000006) ## vol.l5 0.056857 *** ## (0.007305) ## china.l6 -0.000010 ## (0.000006) ## vol.l6 0.109272 *** ## (0.007040) ## const 0.000063 *** ## (0.000003) ## --------------------------- ## R^2 0.173206 ## Adj. R^2 0.172709 ## Num. obs. 19965 ## =========================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega5 &lt;- var(residuals(est.VAR5)) #make the B matrix loss5 &lt;- function(param5){ #Define the restriction B5 &lt;- matrix(c(param5[1], param5[2], 0, param5[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X5 &lt;- Omega5 - B5 %*% t(B5) #loss function loss5 &lt;- sum(X5^2) return(loss5) } res.opt5 &lt;- optim(c(1, 0, 1), loss5, method = &quot;BFGS&quot;) B.hat5 &lt;- matrix(c(res.opt5$par[1], res.opt5$par[2], 0, res.opt5$par[3]), ncol = 2) print(cbind(Omega5,B.hat5 %*% t(B.hat5))) ## china vol ## china 2.022865e-01 5.483724e-06 2.022859e-01 5.147609e-06 ## vol 5.483724e-06 1.641099e-07 5.147609e-06 8.314668e-06 #irf creation irf_res5 &lt;- irf(est.VAR5, impulse = &quot;china&quot;, response = &quot;vol&quot;, bmat=b.hat5, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf5 &lt;- extract_varirf(irf_res5) #the plot single_varirf5 %&gt;% ggplot(aes(x=period, y=irf_china_vol, ymin=lower_china_vol, ymax=upper_china_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF China on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does volatility Granger cause china mentions grangertest(y5[,c(&quot;vol&quot;,&quot;china&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-61.080.372 #does china mentions Granger cause volatility grangertest(y5[,c(&quot;china&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 2e+04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2e+04-61.920.0733 "],["interaction-number-of-post-and-tariff.html", "4 Interaction number of post and tariff", " 4 Interaction number of post and tariff here is an example of our interaction #interaction ##N and tariff, 2 variables int1 = Vdata$tariff * Vdata$N y12 = cbind(int1, Vdata$ASHR_vol) colnames(y12)[1:2] &lt;- c(&quot;interaction&quot;, &quot;vol&quot;) est.VAR12 &lt;- VAR(y12,p=6) mod_vol12 &lt;- est.VAR12$varresult$vol screenreg(mod_vol12, digits = 6) ## ## ================================ ## Model 1 ## -------------------------------- ## interaction.l1 -0.000000 ## (0.000000) ## vol.l1 0.280904 *** ## (0.007037) ## interaction.l2 -0.000000 ## (0.000000) ## vol.l2 0.072496 *** ## (0.007302) ## interaction.l3 -0.000000 ## (0.000000) ## vol.l3 0.045218 *** ## (0.007309) ## interaction.l4 -0.000000 ## (0.000000) ## vol.l4 0.056276 *** ## (0.007309) ## interaction.l5 -0.000000 ## (0.000000) ## vol.l5 0.056856 *** ## (0.007302) ## interaction.l6 -0.000000 ## (0.000000) ## vol.l6 0.109078 *** ## (0.007037) ## const 0.000060 *** ## (0.000003) ## -------------------------------- ## R^2 0.172766 ## Adj. R^2 0.172269 ## Num. obs. 19965 ## ================================ ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega12 &lt;- var(residuals(est.VAR12)) #make the B matrix loss12 &lt;- function(param12){ #Define the restriction B12 &lt;- matrix(c(param12[1], param12[2], 0, param12[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X12 &lt;- Omega12 - B12 %*% t(B12) #loss function loss12 &lt;- sum(X12^2) return(loss12) } res.opt12 &lt;- optim(c(1, 0, 1), loss12, method = &quot;BFGS&quot;) B.hat12 &lt;- matrix(c(res.opt12$par[1], res.opt12$par[2], 0, res.opt12$par[3]), ncol = 2) print(cbind(Omega12,B.hat12 %*% t(B.hat12))) ## interaction vol ## interaction 7.087119e+02 5.683122e-05 7.087119e+02 5.688691e-05 ## vol 5.683122e-05 1.641972e-07 5.688691e-05 7.197072e-06 #irf creation irf_res12 &lt;- irf(est.VAR12, impulse = &quot;interaction&quot;, response = &quot;vol&quot;, bmat=b.hat12, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf12 &lt;- extract_varirf(irf_res12) #the plot single_varirf12 %&gt;% ggplot(aes(x=period, y=irf_interaction_vol, ymin=lower_interaction_vol, ymax=upper_interaction_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF Interaction on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() "],["terms.html", "5 Terms 5.1 First mandate 5.2 second mandate", " 5 Terms Here we look for the first and second mandate effect of posts. We will use the tariff variable as a proxy for the posts 5.1 First mandate # First and Second Mandate #first term Vdata_f = filter(data,between(timestamp, as.Date(&#39;2017-01-20&#39;), as.Date(&#39;2021-01-20&#39;))) #second term Vdata_s = filter(data,between(timestamp, as.Date(&#39;2025-01-20&#39;), as.Date(&#39;2025-05-07&#39;))) y_f_d = cbind(Vdata_f$tariff, Vdata_f$ASHR_vol) colnames(y_f_d)[1:2] &lt;- c(&quot;tariff&quot;, &quot;vol&quot;) est.VAR_f_d &lt;- VAR(y_f_d,p=6) mod_vol_f_d &lt;- est.VAR_f_d$varresult$vol screenreg(mod_vol_f_d, digits = 6) ## ## ========================== ## Model 1 ## -------------------------- ## tariff.l1 -0.000001 ## (0.000008) ## vol.l1 0.245435 *** ## (0.011754) ## tariff.l2 -0.000007 ## (0.000008) ## vol.l2 0.075223 *** ## (0.012070) ## tariff.l3 -0.000007 ## (0.000008) ## vol.l3 0.060102 *** ## (0.012082) ## tariff.l4 -0.000002 ## (0.000008) ## vol.l4 0.060634 *** ## (0.012082) ## tariff.l5 -0.000002 ## (0.000008) ## vol.l5 0.085747 *** ## (0.012070) ## tariff.l6 0.000001 ## (0.000008) ## vol.l6 0.173709 *** ## (0.011754) ## const 0.000033 *** ## (0.000003) ## -------------------------- ## R^2 0.218236 ## Adj. R^2 0.216900 ## Num. obs. 7036 ## ========================== ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega_f_d &lt;- var(residuals(est.VAR_f_d)) #make the B matrix loss_f_d &lt;- function(param_f_d){ #Define the restriction B_f_d &lt;- matrix(c(param_f_d[1], param_f_d[2], 0, param_f_d[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X_f_d &lt;- Omega_f_d - B_f_d %*% t(B_f_d) #loss function loss_f_d &lt;- sum(X_f_d^2) return(loss_f_d) } res.opt_f_d &lt;- optim(c(1, 0, 1), loss_f_d, method = &quot;BFGS&quot;) B.hat_f_d &lt;- matrix(c(res.opt_f_d$par[1], res.opt_f_d$par[2], 0, res.opt_f_d$par[3]), ncol = 2) print(cbind(Omega_f_d,B.hat_f_d %*% t(B.hat_f_d))) ## tariff vol ## tariff 9.834364e-02 1.417639e-06 9.834195e-02 -3.060188e-07 ## vol 1.417639e-06 4.865146e-08 -3.060188e-07 3.476919e-05 #irf creation irf_res_f_d &lt;- irf(est.VAR_f_d, impulse = &quot;tariff&quot;, response = &quot;vol&quot;, bmat=b.hat_f_d, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf_f_d &lt;- extract_varirf(irf_res_f_d) #the plot single_varirf_f_d %&gt;% ggplot(aes(x=period, y=irf_tariff_vol, ymin=lower_tariff_vol, ymax=upper_tariff_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF First Mandate tariff on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does vol granger cause tariff grangertest(y_f_d[,c(&quot;vol&quot;,&quot;tariff&quot;)], order = 6) Res.DfDfFPr(&gt;F) 7.02e+03&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7.03e+03-60.3840.889 #does tariff granger cause vol grangertest(y_f_d[,c(&quot;tariff&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 7.02e+03&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7.03e+03-60.3460.912 5.2 second mandate y_s_d = cbind(Vdata_s$tariff, Vdata_s$ASHR_vol) colnames(y_s_d)[1:2] &lt;- c(&quot;tariff&quot;, &quot;vol&quot;) est.VAR_s_d &lt;- VAR(y_s_d,p=6) mod_vol_s_d &lt;- est.VAR_s_d$varresult$vol screenreg(mod_vol_s_d, digits = 6) ## ## ========================= ## Model 1 ## ------------------------- ## tariff.l1 0.000008 ## (0.000005) ## vol.l1 0.443019 *** ## (0.044731) ## tariff.l2 0.000006 ## (0.000005) ## vol.l2 0.075886 ## (0.049172) ## tariff.l3 -0.000005 ## (0.000005) ## vol.l3 -0.062004 ## (0.049326) ## tariff.l4 -0.000001 ## (0.000005) ## vol.l4 0.075354 ## (0.049365) ## tariff.l5 -0.000001 ## (0.000005) ## vol.l5 -0.003760 ## (0.049339) ## tariff.l6 -0.000006 ## (0.000005) ## vol.l6 0.123405 ** ## (0.044686) ## const 0.000033 ** ## (0.000011) ## ------------------------- ## R^2 0.287673 ## Adj. R^2 0.270543 ## Num. obs. 512 ## ========================= ## *** p &lt; 0.001; ** p &lt; 0.01; * p &lt; 0.05 Omega_s_d &lt;- var(residuals(est.VAR_s_d)) #make the B matrix loss_s_d &lt;- function(param_s_d){ #Define the restriction B_s_d &lt;- matrix(c(param_s_d[1], param_s_d[2], 0, param_s_d[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X_s_d &lt;- Omega_s_d - B_s_d %*% t(B_s_d) #loss function loss_s_d &lt;- sum(X_s_d^2) return(loss_s_d) } res.opt_s_d &lt;- optim(c(1, 0, 1), loss_s_d, method = &quot;BFGS&quot;) B.hat_s_d &lt;- matrix(c(res.opt_s_d$par[1], res.opt_s_d$par[2], 0, res.opt_s_d$par[3]), ncol = 2) print(cbind(Omega_s_d,B.hat_s_d %*% t(B.hat_s_d))) ## tariff vol ## tariff 3.774830e+00 4.940214e-05 3.77483e+00 4.944550e-05 ## vol 4.940214e-05 4.060693e-08 4.94455e-05 2.889062e-05 #irf creation irf_res_s_d &lt;- irf(est.VAR_s_d, impulse = &quot;tariff&quot;, response = &quot;vol&quot;, bmat=b.hat_s_d, n.ahead = 7 * 7, boot = TRUE, ci = 0.95) #function to extract relevant objects for plotting single_varirf_s_d &lt;- extract_varirf(irf_res_s_d) #the plot single_varirf_s_d %&gt;% ggplot(aes(x=period, y=irf_tariff_vol, ymin=lower_tariff_vol, ymax=upper_tariff_vol)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_ribbon(fill=&quot;grey&quot;, alpha=0.2) + geom_line() + theme_light() + ggtitle(&quot;IRF Second Mandate tariff on Volatility&quot;)+ ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() #does vol granger cause tariff grangertest(y_s_d[,c(&quot;vol&quot;,&quot;tariff&quot;)], order = 6) Res.DfDfFPr(&gt;F) 499&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 505-61.490.179 #does tariff granger cause vol grangertest(y_s_d[,c(&quot;tariff&quot;, &quot;vol&quot;)], order = 6) Res.DfDfFPr(&gt;F) 499&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 505-61.180.313 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
