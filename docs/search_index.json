[["index.html", "Terminally Online: Does Donald Trump impact Financial Markets Readme", " Terminally Online: Does Donald Trump impact Financial Markets Marcos Constantinou, Ryan Fellarhi &amp; Jonas Bruno Last edited: 20.05.2025 Readme This is a Website for a class project from the 2025 Class Macroeconometrics at Université de Lausanne. It is intended as an archive and Display of our Project. You can find all data for recreation on www.github.com/theshufflebee/mmetricsproject. "],["abstract.html", "Abstract", " Abstract In this short paper, we aim to asses to what extent financial markets may react to Donald Trump’s social media posts, and specifically the effect on average realised volatility. We do so using both ARMA-X and VAR models, with data spanning the 1st of January 2014, to the 7th of May 2025, over various time horizons and independent variables. We find limited evidence that there is a significant positive effect, and provide some explanations as to why this could be the case. "],["introduction.html", "Part 1 Introduction 1.1 Motivation 1.2 Literature Review", " Part 1 Introduction 1.1 Motivation Over the past 15 years social media has become an important communication tool for politicians. One of the pioneers of this novel approach has been Donald Trump, the 45th and 47th President of the United States. Since his ban on Twitter after the January 6th riots, his quantity of social media posts has drastically increased. This is shown in the following figure. 1 The content of his posts can sometimes have announcements or teases of future political decisions. Note the recent infamous “THIS IS A GREAT TIME TO BUY!!! DJT” post sent just an hour before lifting his reciprocal tariffs. It is then not improbable that agents in financial markets might take this information into account in their decision making. This question has been asked before in the literature, focusing rather on his first term. This brings us to our research question: Do Donald Trumps Posts impact market Volatility? 1.1 Figure 1.1: Terminally Online: Trump’s Twitter &amp; Truth Social Posts (EDT) 1.2 Literature Review Information is one of the most valuable assets in the financial market. Its importance lies at the core of the “Efficient Market Hypothesis”, which states that the prices of assets fully reflect all available information, adjusting immediately to any new data Fama et al. (2003) , and thereby creating a strong demand for information flow. In addition, the “Mixture of Distribution Hypothesis” states that the release of new information is closely linked to movements in both realized and implied volatility Andersen (1996), French &amp; Roll (1986), Vlastakis &amp; Markellos (2012). Consequently, a large part of the literature had focused on the relation between announcements, news and market activity. For example, Schumaker &amp; Chen (2009) use various linguistic and textual representations derived from financial news to predict stock market prices. Similarly, Ederington &amp; Lee (1993) analyze the impact of macroeconomic news announcements on interest rate and foreign exchange futures markets, particularly in terms of price changes and volatility. Both studies, among others, find that prices— such as stock prices—react primarily within minutes after the release of new information. Recently, the world has witnessed the rise of the Internet which revolutionized the dissemination and accessibility of information. Social media enable investors, analysts or politicians to instantly share their information, news or opinions. This led some studies to focus on the communication dynamics of social platform to predict changes in the returns of financial assets De Choudhury et al. (2008) &amp; Bartov et al. (2018). In this context, the impact of Trump’s tweets on various financial and macroeconomic variables has been analysed by several studies, especially during his first mandate. Using high-frequency financial data, Gjerstad et al. (2021) found an increase in uncertainty and trading volume, along with a decline in the U.S. stock market—regardless of the tweet’s content. However, the effect was stronger when Trump used confrontational words such as “tariff” or “trade war.” Some of his announcements also influenced the U.S. dollar exchange rate Vlastakis &amp; Markellos (2012) and certain market indices within minutes of the tweet being posted Colonescu (2018) &amp; Kinyua et al. (2021). Other scholars have shown that negative Trump tweets about specific companies tended to reduce demand for their stocks Brans &amp; Scholtens (2020) &amp; Mendels (2019), whereas some other have shown that they also impact market volatility indices such as the VIX Fendel et al. (2019) or the Volfele Klaus &amp; Koser (2021). The effects of his tweets also extended beyond the U.S.. For example, Nishimura &amp; Sun (2025) shows a positive relationship between volatility in European stock markets and tweeter activity of Trump, and this effect tends to intensify as public intention for his tweet grows Nishimura &amp; Sun (2025). Our paper is built as follows: Section 2 describes the data, their sources, and the several transformations applied. Section 3 focuses on ARMA-X models, describing both our methodology and results. Section 4 does the same, though for our VAR models. Section 5 concludes. References Andersen, T. G. (1996). Return Volatility and Trading Volume: An Information Flow Interpretation of Stochastic Volatility. The Journal of Finance, 51(1), 169–204. https://doi.org/10.2307/2329306 Bartov, E., Faurel, L., &amp; Mohanram, P. S. (2018). Can Twitter Help Predict Firm-Level Earnings and Stock Returns? The Accounting Review, 93(3), 25–57. https://doi.org/10.2308/accr-51865 Brans, H., &amp; Scholtens, B. (2020). Under his thumb the effect of president Donald Trump’s Twitter messages on the US stock market. PLOS ONE, 15(3), e0229931. https://doi.org/10.1371/journal.pone.0229931 Colonescu, C. (2018). The Effects of Donald Trump’s Tweets on US Financial and Foreign Exchange Markets. Athens Journal of Business &amp; Economics, 4(4), 375–388. De Choudhury, M., Sundaram, H., John, A., &amp; Seligmann, D. D. (2008). Can blog communication dynamics be correlated with stock market activity? Proceedings of the Nineteenth ACM Conference on Hypertext and Hypermedia, 55–60. https://doi.org/10.1145/1379092.1379106 Ederington, L. H., &amp; Lee, J. H. (1993). How Markets Process Information: News Releases and Volatility. The Journal of Finance, 48(4), 1161–1191. https://doi.org/10.2307/2329034 Fama, E. F., Fisher, L., Jensen, M. C., &amp; Roll, R. W. (2003). The Adjustment of Stock Prices to New Information. SSRN Electronic Journal. https://doi.org/10.2139/ssrn.321524 Fendel, R., Burggraf, T., &amp; Huynh, T. L. D. (2019). Political News and Stock Prices: Evidence from Trump’s Trade War ({{SSRN Scholarly Paper}} No. 3479822). Social Science Research Network. French, K. R., &amp; Roll, R. (1986). Stock return variances: The arrival of information and the reaction of traders. Journal of Financial Economics, 17(1), 5–26. https://doi.org/10.1016/0304-405X(86)90004-8 Gjerstad, P., Meyn, P. F., Molnár, P., &amp; Næss, T. D. (2021). Do President Trump’s tweets affect financial markets? Decision Support Systems, 147, 113577. https://doi.org/10.1016/j.dss.2021.113577 Kinyua, J. D., Mutigwe, C., Cushing, D. J., &amp; Poggi, M. (2021). An analysis of the impact of President Trump’s tweets on the DJIA and S&amp;P 500 using machine learning and sentiment analysis. Journal of Behavioral and Experimental Finance, 29, 100447. https://doi.org/10.1016/j.jbef.2020.100447 Klaus, J., &amp; Koser, C. (2021). Measuring Trump: The Volfefe Index and its impact on European financial markets. Finance Research Letters, 38(C). Mendels, G. (2019). Stanford Research Series: Making Trading Great Again: Trump-based Stock Predictions via Doc2vec…. In Comet. Nishimura, Y., &amp; Sun, B. (2025). Impacts of Donald Trump’s tweets on volatilities in the European stock markets. Finance Research Letters, 72, 106491. https://doi.org/10.1016/j.frl.2024.106491 Schumaker, R. P., &amp; Chen, H. (2009). Textual analysis of stock market prediction using breaking financial news: The AZFin text system. ACM Trans. Inf. Syst., 27(2), 12:1–12:19. https://doi.org/10.1145/1462198.1462204 Vlastakis, N., &amp; Markellos, R. N. (2012). Information demand and stock market volatility. Journal of Banking &amp; Finance, 36(6), 1808–1821. https://doi.org/10.1016/j.jbankfin.2012.02.007 Includes both Posts and Reposts↩︎ "],["data.html", "Part 2 Data 2.1 Financial Data 2.2 Political Data 2.3 Final Dataframe", " Part 2 Data 2.1 Financial Data For our financial data, we decided to try to find minute-by-minute prices for broad market indices. While the actual indices do not update their prices so often, we had to take proxies under the form of ETF’s that track them. Our 3 markets of analysis are: SPY to track the S&amp;P500, VGK to track the FTSE Developed Europe All Cap Index, and finally ASHR to track the CSI 300 China. We accessed this data through a free stock API, Alpha Vantage. Our timeframe is from the first of January 2014 to the 7th of May 2025. We then had to transform this data to get our main variable of interest, Average Hourly Volatility (AHV). Note that this is realised market volatility. We did so with the following formula: \\[ \\begin{aligned} v_t = \\frac{1}{N}&amp;\\sum_{i=1}^N(\\Delta p_{t,i})^2 \\end{aligned} \\] Where \\(\\Delta p_t\\) is the difference in price (open - close) and \\(i\\) represents every minute. We used a custom function in order to get the AHV for each open market hour. Note that the first hour is from 9:30 am to 10:00 am since the market opens on a half-hour but closes at 4:00 pm. We can plot this data in the following table: We can clearly see that the last few months show a new era of never seen before levels of volatility. Shocks on volatility recently have reached, and even surpassed (for a few data points) levels seen during the COVID-19 pandemic. 2.2 Political Data We have two sources for Trump’s posts. The Tweets are from Kaggle Shantanu (n.d.) and go until the 8th of January 2021. Since he switched his primary posting platform to Truth Social we use only that Data from 2021 onwards. All Truth Social posts were scrapped from trumpstruth.org, a webpage that aims to conserve all his posts. Note that we have had to use web-scrapping methods in order to download all his Truth Social posts in a dataset. A big problem we had in our analysis was what to do with social media posts which appeared outside market hours. We first decided to simply ignore them, but it turned out to remove a lot of observations. We finally decided to push all the social media information outside market hours to the next open hour. This comes as an assumption.2 Since our financial data is hourly, we aggregate the social data by hour. We then construct multiple variables from the social media data. These include a dummy for whether there was a post, the number of posts an hour and counts for certain words (“tariffs”,“trade”,“china”). Further we applied some simple sentiment analysis algorithms on the data to see if there are certain sentiments in his tweets that move the markets. Details on all our data management procedures can be found in the GitHub repository. 2.3 Final Dataframe Here is a look into our final, fully cleaned, fully transformed dataset. Table 2.1: timestampSPY_volVGK_volASHR_vol 2025-05-06 10:00:000.04660.0007315.32e-05 2025-05-06 11:00:000.02780.0002173.33e-05 2025-05-06 12:00:000.08590.0004683e-05        2025-05-06 13:00:000.04570.0004573.26e-05 2025-05-06 14:00:000.03360.0002242.24e-05 2025-05-06 15:00:000.05170.0002952.03e-05 Table 2.1: dummyNtarifftradechina 00000 00000 13020 15000 11000 00000 Table 2.1: prop_angerprop_anticipationprop_disgustprop_fearprop_joy 0     0     0     0    0    0     0     0     0    0    0.09090.04550.09090.2270    0.087 0.087 0     0.13 0.13 0     0     0     0    0    0     0     0     0    0    Table 2.1: prop_sadnessprop_surpriseprop_trustprop_negativeprop_positive 0     0    0    0    0     0     0    0    0    0     0.04550.1360.3640.5560.444 0.04350.0870.4350.1760.824 0     0    0    0    0     0     0    0    0    0     ¨ 3: For instance, if Trump tweets on Good Friday (market holiday), then the market will only react to this new information on Monday at 9:30 am. References Shantanu, R. (n.d.). Donald Trump Tweets Dataset. https://www.kaggle.com/datasets/codebreaker619/donald-trump-tweets-dataset. 2↩︎ 2↩︎ "],["arma-x.html", "Part 3 ARMA-X 3.1 Methodology 3.2 Results", " Part 3 ARMA-X 3.1 Methodology Once we have our final dataframe, we could then finally start on some analysis. We first thought of a simple ARMA-X type specification, taking the AHV as our “y variable” and taking any of the social media variables as the exogenous regressors. The assumption here is that, while the market reacts to Trump posts, Trump’s posts are chaotic, nonsensical, and random enough to be considered exogenous. We of course first start by checking stationarity of our variables (ADF), where we find p-values of 0.01 suggesting that the processes are not explosive. Then, we use a custom function in order to choose the number of lags based on the AIC criterion. This however, while often choose a very high number of lags, which could be explained by our data being hourly. As such we decided to put a limit of 3 lags, which sees minimal AIC loss and simplifying our models considerably. 3.2 Results 3.2.1 Full Timeframe We run models with the following exogenous regressors: \\(TweetDummy\\), \\(TweetCount\\), and the mentions of words \\(Tariff\\), \\(Trade\\), and \\(China\\). We first note on the table in section 7.1.1 that all the x-regressors are significant, apart from trade. Notice also that all the coefficients (apart from \\(Tariff_{t-3}\\)) are positive, in line with our main hypothesis. The effect of \\(Tariff_{t-1}\\) and \\(Tariff_{t-2}\\) are especially large, given the usual size of the volatility as seen in Section 7.1.6. We in fact predict that an extra mention of tariffs one hour ago, leads to a whopping extra 0.02 in volatility which is just about the average size for the full timeframe. We can see the impulse response function (IRF) for this shock, in 7.1.2 Notice that there is a large response in the first periods, and then a graduate decline over time. Something to note is that in our analyses of IRF’s, when including MA terms, the decline shows up gradual while being much sharper when only including AR terms. Note that we ran all these models on the VGK and ASHR ETF’s as well, though no significant results appear apart from a small but statistically significant effect of the tariff variable for VGK. 3.2.2 Split Samples We then split our sample for the first and second term of the Trump presidency. We only run models on tariff, trade and china this time. As seen on table 7.1.3, the first interesting result is in the coefficients of tariff being significant and very large in the second term, while being small and not statistically significant in the first. A similar story goes for the China variable. This may lend some evidence to support the claim that investors are much more reactive to Trump’s social media presence now than before. We’ve found similar IRF’s as for the full timeframe. Tables 7.1.2 show the IRF’s for the second term, of the impacts of tariff and china mention shocks on the AHV. Finally, we can check the residuals of all these models to test them somewhat. In Section 7.1.5, the pvalues being zero for the full timeframe and first term indicate that there is autocorrelation in the residuals, thus suggesting that these estimations have problems. Note however, that the p-values for the second term are quite high, lending support to our models on the split sample. These results suggest that perhaps ARMA-X models are not right in this context as it is not unreasonable to think that Trump does in fact react to market movements, which would break the exogeneity assumption that is critical for this type of model. With this information, we decided to run a VAR model to deepen our understanding of these variables. "],["var.html", "Part 4 VAR 4.1 Methodology 4.2 Results", " Part 4 VAR 4.1 Methodology 4.2 Results 4.2.1 Full Timeframe 4.2.2 Split Samples "],["conclusion.html", "Part 5 Conclusion", " Part 5 Conclusion We started this project with the intention of understanding whether the impact of Trump’s social media posts affect financial markets, and to see if there is perhaps a difference from his first presidential mandate. After various headaches with our data, we first ran ARMA-X models where we found significant and positive results albeit with strong auto-correlation in the errors, with only the second term analysis offering more convincing results. We then try VAR models for a possibly more accurate picture, albeit with little to no success. We once again find strong auto-correlation in the errors, which we here fix by using Newey-West standard errors. We found that the only significant coefficients are actually negative, suggesting Trump’s social media presence would reduce volatility. However, we would suggest strong against trying to interpret these results given that the models seem to not fit particularly well. This may be due to seasonality in our data (a common trend seen is our daily AVH is high volatility in the first open hours, and a gradual slowdown for the rest of the day), or to our handling of non-market hours. Further work could look at exploring said issues in greater depth, further complicate the models by adding more variables and interactions between them, and/or additionally use more sophisticated models, such as models including co-integration. "],["bibliography.html", "Part 6 Bibliography References", " Part 6 Bibliography References Andersen, T. G. (1996). Return Volatility and Trading Volume: An Information Flow Interpretation of Stochastic Volatility. The Journal of Finance, 51(1), 169–204. https://doi.org/10.2307/2329306 Bartov, E., Faurel, L., &amp; Mohanram, P. S. (2018). Can Twitter Help Predict Firm-Level Earnings and Stock Returns? The Accounting Review, 93(3), 25–57. https://doi.org/10.2308/accr-51865 Brans, H., &amp; Scholtens, B. (2020). Under his thumb the effect of president Donald Trump’s Twitter messages on the US stock market. PLOS ONE, 15(3), e0229931. https://doi.org/10.1371/journal.pone.0229931 Colonescu, C. (2018). The Effects of Donald Trump’s Tweets on US Financial and Foreign Exchange Markets. Athens Journal of Business &amp; Economics, 4(4), 375–388. De Choudhury, M., Sundaram, H., John, A., &amp; Seligmann, D. D. (2008). Can blog communication dynamics be correlated with stock market activity? Proceedings of the Nineteenth ACM Conference on Hypertext and Hypermedia, 55–60. https://doi.org/10.1145/1379092.1379106 Ederington, L. H., &amp; Lee, J. H. (1993). How Markets Process Information: News Releases and Volatility. The Journal of Finance, 48(4), 1161–1191. https://doi.org/10.2307/2329034 Fama, E. F., Fisher, L., Jensen, M. C., &amp; Roll, R. W. (2003). The Adjustment of Stock Prices to New Information. SSRN Electronic Journal. https://doi.org/10.2139/ssrn.321524 Fendel, R., Burggraf, T., &amp; Huynh, T. L. D. (2019). Political News and Stock Prices: Evidence from Trump’s Trade War ({{SSRN Scholarly Paper}} No. 3479822). Social Science Research Network. French, K. R., &amp; Roll, R. (1986). Stock return variances: The arrival of information and the reaction of traders. Journal of Financial Economics, 17(1), 5–26. https://doi.org/10.1016/0304-405X(86)90004-8 Gjerstad, P., Meyn, P. F., Molnár, P., &amp; Næss, T. D. (2021). Do President Trump’s tweets affect financial markets? Decision Support Systems, 147, 113577. https://doi.org/10.1016/j.dss.2021.113577 Kinyua, J. D., Mutigwe, C., Cushing, D. J., &amp; Poggi, M. (2021). An analysis of the impact of President Trump’s tweets on the DJIA and S&amp;P 500 using machine learning and sentiment analysis. Journal of Behavioral and Experimental Finance, 29, 100447. https://doi.org/10.1016/j.jbef.2020.100447 Klaus, J., &amp; Koser, C. (2021). Measuring Trump: The Volfefe Index and its impact on European financial markets. Finance Research Letters, 38(C). Mendels, G. (2019). Stanford Research Series: Making Trading Great Again: Trump-based Stock Predictions via Doc2vec…. In Comet. Nishimura, Y., &amp; Sun, B. (2025). Impacts of Donald Trump’s tweets on volatilities in the European stock markets. Finance Research Letters, 72, 106491. https://doi.org/10.1016/j.frl.2024.106491 Schumaker, R. P., &amp; Chen, H. (2009). Textual analysis of stock market prediction using breaking financial news: The AZFin text system. ACM Trans. Inf. Syst., 27(2), 12:1–12:19. https://doi.org/10.1145/1462198.1462204 Shantanu, R. (n.d.). Donald Trump Tweets Dataset. https://www.kaggle.com/datasets/codebreaker619/donald-trump-tweets-dataset. Vlastakis, N., &amp; Markellos, R. N. (2012). Information demand and stock market volatility. Journal of Banking &amp; Finance, 36(6), 1808–1821. https://doi.org/10.1016/j.jbankfin.2012.02.007 "],["appendix.html", "Part 7 Appendix 7.1 ARMAX 7.2 VAR 7.3 IRF Cumultative Second Term China 7.4 Tables Terms", " Part 7 Appendix 7.1 ARMAX We choose the specification in the armax_models file. In this file, we will just run said specifications to produce nice tables and graphs to include in our final paper. This is also why there are specification differences in the separate timeframes. We always use the best fit we found earlier. 7.1.1 SPY ARMAX Table (Jan 2014 - May 2025) ARMAX Models of Average Hourly Volatility   Model 1 Model 2 Model 3 Model 4 Model 5 AR(1) 0.0300 0.0278 0.2200*** 2.1903*** 0.2209***   (0.0510) (0.0510) (0.0084) (0.0096) (0.0084) AR(2) 0.7229*** 0.7210*** 0.9388*** -1.4727*** 0.9382***   (0.0397) (0.0399) (0.0037) (0.0173) (0.0037) AR(3) 0.2110*** 0.2148*** -0.1837*** 0.2784*** -0.1837***   (0.0287) (0.0284) (0.0079) (0.0082) (0.0079) MA(1) 0.2751*** 0.2779*** 0.0870*** -1.8955*** 0.0878***   (0.0496) (0.0496) (0.0042) (0.0062) (0.0042) MA(2) -0.6445*** -0.6430*** -0.8960*** 0.9165*** -0.8950***   (0.0284) (0.0285) (0.0042) (0.0063) (0.0042) MA(3) -0.3527*** -0.3563***         (0.0256) (0.0253)       TweetDummyt 0.0014***           (0.0002)         TweetDummyt-1 0.0008***           (0.0002)         TweetCountt   0.0004***           (0.0001)       TweetCountt-1   0.0002**           (0.0001)       Tarifft     0.0035*           (0.0014)     Tarifft-1     0.0191***           (0.0015)     Tarifft-2     0.0103***           (0.0015)     Tarifft-3     -0.0045**           (0.0014)     Tradet       0.0032           (0.0018)   Tradet-1       0.0016           (0.0018)   Chinat         0.0026*           (0.0012) AIC -45761.2161 -45737.6695 -46020.9547 -45816.1540 -45840.5349 AICc -45761.2051 -45737.6585 -46020.9415 -45816.1449 -45840.5277 BIC -45682.1963 -45658.6497 -45934.0340 -45745.0361 -45777.3186 Log Likelihood 22890.6081 22878.8348 23021.4773 22917.0770 22928.2675 Num. obs. 19970 19970 19968 19970 19971 ***p &lt; 0.001; **p &lt; 0.01; *p &lt; 0.05 7.1.2 SPY ARMAX IRFs (Jan 2014 - May 2025) 7.1.3 SPY ARMAX Table (Split Presidential Terms) Split-Term ARMAX Models of Average Hourly Volatility   First Term (1) First Term (2) First Term (3) Second Term (1) Second Term (2) Second Term (3) AR(1) 0.2953*** 0.2943*** 0.2927*** 0.9686*** 0.9683*** 0.9693***   (0.0225) (0.0224) (0.0224) (0.0163) (0.0163) (0.0161) AR(2) 0.1434*** 0.1439*** 0.1438***         (0.0220) (0.0220) (0.0219)       AR(3) 0.5456*** 0.5462*** 0.5480***         (0.0223) (0.0222) (0.0222)       MA(1) 0.1854*** 0.1863*** 0.1866*** -0.6965*** -0.6905*** -0.7207***   (0.0180) (0.0179) (0.0179) (0.0469) (0.0469) (0.0467) MA(2) -0.1707*** -0.1706*** -0.1695*** -0.1732*** -0.1755*** -0.1609***   (0.0169) (0.0169) (0.0168) (0.0437) (0.0438) (0.0434) MA(3) -0.6557*** -0.6564*** -0.6575***         (0.0162) (0.0161) (0.0161)       Constant 0.0174* 0.0174* 0.0173* 0.1170 0.1372 0.1044   (0.0085) (0.0086) (0.0086) (0.0775) (0.0791) (0.0704) Tarifft 0.0011     0.0048       (0.0010)     (0.0099)     Tarifft-1   0.0023**     -0.0074       (0.0009)     (0.0297)   Tarifft-2     0.0018**     0.0173       (0.0006)     (0.0319) Tradet       0.0278**             (0.0102)     Chinat       0.0168             (0.0099)     Chinat-1           0.1515***             (0.0324) Chinat-2           0.1309***             (0.0319) AIC -28604.6559 -28610.2269 -28613.1693 633.4836 638.2093 610.2140 AICc -28604.6303 -28610.2013 -28613.1437 633.7676 638.3737 610.4980 BIC -28542.9191 -28548.4901 -28551.4325 667.4525 663.7092 644.1829 Log Likelihood 14311.3279 14314.1134 14315.5847 -308.7418 -313.1047 -297.1070 Num. obs. 7042 7042 7042 516 518 516 ***p &lt; 0.001; **p &lt; 0.01; *p &lt; 0.05 7.1.4 SPY ARMAX IRFs (Split Terms) 7.1.5 Residual Test Table 7.1: Ljung-Box Test p-values for Residuals Model Ljung.Box.p.value First.Term Second.Term Twitter Dummy 0 NA NA Twitter Count 0 NA NA Tariff 0 0 0.848983 Trade 0 0 0.832207 China 0 0 0.512238 7.1.6 Descriptive Stats means &lt;- data.frame( Model = c(&quot;Full Time Mean&quot;, &quot;First Term Mean&quot;, &quot;Second Term Mean&quot;), `SPY Volatility Mean` = c( mean1, mean2, mean3)) kable(means, digits = 6, format=&quot;html&quot;, caption = &quot;Summary Statistics of SPY Volatility&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;), full_width = FALSE, position = &quot;center&quot;) Table 7.2: Summary Statistics of SPY Volatility Model SPY.Volatility.Mean Full Time Mean 0.022621 First Term Mean 0.017486 Second Term Mean 0.144248 7.2 VAR 7.2.1 Full Timeframe IRF Tweet Dummy 7.2.2 Cumultative IRF of Dummy Full term 7.2.3 IRF Tariff full Timeframe 7.2.4 IRF Tariff Cumultative 7.2.5 Table 1 VAR results=‘asis’ 7.2.6 html table tmpfile &lt;- tempfile(fileext = &quot;.html&quot;) # create temp file table_texreg_html &lt;- htmlreg( l = models_list, override.se = robust_ses, override.pvalues = robust_pvals, custom.coef.map = custom_names, custom.model.names = c(&quot;TweetDummy&quot;, &quot;TweetCount&quot;, &quot;Tariff&quot;, &quot;Trade&quot;, &quot;China&quot;), caption = &quot;VAR Models of Average Hourly Volatility&quot;, digits = 6, custom.gof.rows = list(&quot;Shock (IRF)&quot; = c(0.0041713, 0.003061, 0.001189, 0.000215, 0.001937)), custom.note = &quot;This table displays VAR regression with only two variables: AHV and the X regressor. Column names represent the X variable for the selected model.&quot;, file = tmpfile ) ## The table was written to the file &#39;C:\\Users\\jonas\\AppData\\Local\\Temp\\RtmpwdFYtM\\file5f2c33395096.html&#39;. cat(readLines(tmpfile), sep = &quot;\\n&quot;) VAR Models of Average Hourly Volatility   TweetDummy TweetCount Tariff Trade China \\(AHV_{t-1}\\) 0.299398** 0.299350* 0.294752** 0.301160** 0.274419***   (0.112369) (0.115966) (0.110305) (0.111228) (0.078452) \\(AHV_{t-2}\\) 0.015406 0.013567 0.020667 0.011769 0.031670   (0.043748) (0.045193) (0.038728) (0.043649) (0.028307) \\(AHV_{t-3}\\) 0.076169*** 0.076851*** 0.068749*** 0.072284*** 0.052697   (0.008464) (0.008788) (0.016281) (0.014041) (0.034520) \\(AHV_{t-4}\\) 0.084229 0.085108 0.074401 0.080544 0.035573   (0.067860) (0.070966) (0.079828) (0.066709) (0.100929) \\(AHV_{t-5}\\) 0.013424** 0.010406 0.015342** 0.017631* 0.005467   (0.005076) (0.005958) (0.005363) (0.008269) (0.032198) \\(AHV_{t-6}\\) 0.126612* 0.126324* 0.132056** 0.124277* 0.150909**   (0.050031) (0.050865) (0.049243) (0.051402) (0.051059) \\(X_{t-1}\\) 0.006569 0.000947 0.027028 0.020463 0.154584   (0.010145) (0.001307) (0.028623) (0.029865) (0.138092) \\(X_{t-2}\\) -0.003222** -0.000736 0.008588 0.047163 0.099315   (0.001039) (0.000524) (0.007211) (0.041341) (0.095007) \\(X_{t-3}\\) -0.005538** -0.001637* -0.010306 -0.026631 -0.047690   (0.001707) (0.000717) (0.007584) (0.021348) (0.030038) \\(X_{t-4}\\) 0.002474 0.000136 0.002002 0.019925 -0.020669   (0.004957) (0.000914) (0.002962) (0.031571) (0.012428) \\(X_{t-5}\\) -0.008527* -0.001651 -0.002649 -0.012965 -0.004470   (0.003989) (0.001068) (0.004280) (0.014973) (0.018255) \\(X_{t-6}\\) -0.003594 -0.000627 -0.004279 -0.011100 0.008027   (0.003191) (0.000760) (0.003854) (0.010317) (0.022286) Constant 0.072524** 0.068423** 0.049265** 0.052127*** 0.044027*   (0.024156) (0.021308) (0.015262) (0.014290) (0.017471) Shock (IRF) 0.004171 0.003061 0.001189 0.000215 0.001937 R2 0.244117 0.240788 0.251263 0.244406 0.285165 Adj. R2 0.224424 0.221009 0.231757 0.224721 0.266543 Num. obs. 512 512 512 512 512 This table displays VAR regression with only two variables: AHV and the X regressor. Column names represent the X variable for the selected model. 7.2.7 Dummy First Term # First Term Estimates #------------------------ # Dummy y_f_d = cbind(Vdata_f$dummy, Vdata_f$SPY_vol) colnames(y_f_d)[1:2] &lt;- c(&quot;dummy&quot;, &quot;vol&quot;) est.VAR_f_d &lt;- VAR(y_f_d,p=6) #extract results mod_vol_f_d = est.VAR_f_d$varresult$vol f_f_d = formula(mod_vol_f_d) d_f_d = model.frame(mod_vol_f_d) lm_clean_f_d = lm(f_f_d, data= d_f_d) #apply Newey-West nw_vcov_f_d = NeweyWest(lm_clean_f_d, lag=6) nw_se_f_d = sqrt(diag(nw_vcov_f_d)) #t-stats coef_f_d = coef(lm_clean_f_d) t_stat_f_d = coef_f_d/nw_se_f_d #recalculate p-values robust_f_d = 2*(1-pt(abs(t_stat_f_d), df = df.residual(lm_clean_f_d))) 7.2.8 First Mandate y_f_n = cbind(Vdata_f$N, Vdata_f$SPY_vol) colnames(y_f_n)[1:2] &lt;- c(&quot;N&quot;, &quot;vol&quot;) est.VAR_f_n &lt;- VAR(y_f_n,p=6) #extract results mod_vol_f_n = est.VAR_f_n$varresult$vol f_f_n = formula(mod_vol_f_n) d_f_n = model.frame(mod_vol_f_n) lm_clean_f_n = lm(f_f_n, data= d_f_n) #apply Newey-West nw_vcov_f_n = NeweyWest(lm_clean_f_n, lag=6) nw_se_f_n = sqrt(diag(nw_vcov_f_n)) #t-stats coef_f_n = coef(lm_clean_f_n) t_stat_f_n = coef_f_n/nw_se_f_n #recalculate p-values robust_f_n = 2*(1-pt(abs(t_stat_f_n), df = df.residual(lm_clean_f_n))) 7.2.9 Tariff first Mandate y_f_ta = cbind(Vdata_f$tariff, Vdata_f$SPY_vol) colnames(y_f_ta)[1:2] &lt;- c(&quot;tariff&quot;, &quot;vol&quot;) est.VAR_f_ta &lt;- VAR(y_f_ta,p=6) #extract results mod_vol_f_ta = est.VAR_f_ta$varresult$vol f_f_ta = formula(mod_vol_f_ta) d_f_ta = model.frame(mod_vol_f_ta) lm_clean_f_ta = lm(f_f_ta, data= d_f_ta) #apply Newey-West nw_vcov_f_ta = NeweyWest(lm_clean_f_ta, lag=6) nw_se_f_ta = sqrt(diag(nw_vcov_f_ta)) #t-stats coef_f_ta = coef(lm_clean_f_ta) t_stat_f_ta = coef_f_ta/nw_se_f_ta #recalculate p-values robust_f_ta = 2*(1-pt(abs(t_stat_f_ta), df = df.residual(lm_clean_f_ta))) 7.2.10 Trade First Mandate y_f_tr = cbind(Vdata_f$trade, Vdata_f$SPY_vol) colnames(y_f_tr)[1:2] &lt;- c(&quot;trade&quot;, &quot;vol&quot;) est.VAR_f_tr &lt;- VAR(y_f_tr,p=6) #extract results mod_vol_f_tr = est.VAR_f_tr$varresult$vol f_f_tr = formula(mod_vol_f_tr) d_f_tr = model.frame(mod_vol_f_tr) lm_clean_f_tr = lm(f_f_tr, data= d_f_tr) #apply Newey-West nw_vcov_f_tr = NeweyWest(lm_clean_f_tr, lag=6) nw_se_f_tr = sqrt(diag(nw_vcov_f_tr)) #t-stats coef_f_tr = coef(lm_clean_f_tr) t_stat_f_tr = coef_f_tr/nw_se_f_tr #recalculate p-values robust_f_tr = 2*(1-pt(abs(t_stat_f_tr), df = df.residual(lm_clean_f_tr))) 7.2.11 China First Mandate y_f_ch = cbind(Vdata_f$china, Vdata_f$SPY_vol) colnames(y_f_ch)[1:2] &lt;- c(&quot;china&quot;, &quot;vol&quot;) est.VAR_f_ch &lt;- VAR(y_f_ch,p=6) #extract results mod_vol_f_ch = est.VAR_f_ch$varresult$vol f_f_ch = formula(mod_vol_f_ch) d_f_ch = model.frame(mod_vol_f_ch) lm_clean_f_ch = lm(f_f_ch, data= d_f_ch) #apply Newey-West nw_vcov_f_ch = NeweyWest(lm_clean_f_ch, lag=6) nw_se_f_ch = sqrt(diag(nw_vcov_f_ch)) #t-stats coef_f_ch = coef(lm_clean_f_ch) t_stat_f_ch = coef_f_ch/nw_se_f_ch #recalculate p-values robust_f_ch = 2*(1-pt(abs(t_stat_f_ch), df = df.residual(lm_clean_f_ch))) 7.2.12 Second Term 7.2.13 Dummy y_s_d = cbind(Vdata_s$dummy, Vdata_s$SPY_vol) colnames(y_s_d)[1:2] &lt;- c(&quot;dummy&quot;, &quot;vol&quot;) est.VAR_s_d &lt;- VAR(y_s_d,p=6) #extract results mod_vol_s_d = est.VAR_s_d$varresult$vol f_s_d = formula(mod_vol_s_d) d_s_d = model.frame(mod_vol_s_d) lm_clean_s_d = lm(f_s_d, data= d_s_d) #apply Newey-West nw_vcov_s_d = NeweyWest(lm_clean_s_d, lag=6) nw_se_s_d = sqrt(diag(nw_vcov_s_d)) #t-stats coef_s_d = coef(lm_clean_s_d) t_stat_s_d = coef_s_d/nw_se_s_d #recalculate p-values robust_s_d = 2*(1-pt(abs(t_stat_s_d), df = df.residual(lm_clean_s_d))) 7.2.14 N y_s_n = cbind(Vdata_s$N, Vdata_s$SPY_vol) colnames(y_s_n)[1:2] &lt;- c(&quot;N&quot;, &quot;vol&quot;) est.VAR_s_n &lt;- VAR(y_s_n,p=6) #extract results mod_vol_s_n = est.VAR_s_n$varresult$vol f_s_n = formula(mod_vol_s_n) d_s_n = model.frame(mod_vol_s_n) lm_clean_s_n = lm(f_s_n, data= d_s_n) #apply Newey-West nw_vcov_s_n = NeweyWest(lm_clean_s_n, lag=6) nw_se_s_n = sqrt(diag(nw_vcov_s_n)) #t-stats coef_s_n = coef(lm_clean_s_n) t_stat_s_n = coef_s_n/nw_se_s_n #recalculate p-values robust_s_n = 2*(1-pt(abs(t_stat_s_n), df = df.residual(lm_clean_s_n))) 7.2.15 Tariff y_s_ta = cbind(Vdata_s$tariff, Vdata_s$SPY_vol) colnames(y_s_ta)[1:2] &lt;- c(&quot;tariff&quot;, &quot;vol&quot;) est.VAR_s_ta &lt;- VAR(y_s_ta,p=6) #extract results mod_vol_s_ta = est.VAR_s_ta$varresult$vol f_s_ta = formula(mod_vol_s_ta) d_s_ta = model.frame(mod_vol_s_ta) lm_clean_s_ta = lm(f_s_ta, data= d_s_ta) #apply Newey-West nw_vcov_s_ta = NeweyWest(lm_clean_s_ta, lag=6) nw_se_s_ta = sqrt(diag(nw_vcov_s_ta)) #t-stats coef_s_ta = coef(lm_clean_s_ta) t_stat_s_ta = coef_s_ta/nw_se_s_ta #recalculate p-values robust_s_ta = 2*(1-pt(abs(t_stat_s_ta), df = df.residual(lm_clean_s_ta))) 7.2.16 Trade y_s_tr = cbind(Vdata_s$trade, Vdata_s$SPY_vol) colnames(y_s_tr)[1:2] &lt;- c(&quot;trade&quot;, &quot;vol&quot;) est.VAR_s_tr &lt;- VAR(y_s_tr,p=6) #extract results mod_vol_s_tr = est.VAR_s_tr$varresult$vol f_s_tr = formula(mod_vol_s_tr) d_s_tr = model.frame(mod_vol_s_tr) lm_clean_s_tr = lm(f_s_tr, data= d_s_tr) #apply Newey-West nw_vcov_s_tr = NeweyWest(lm_clean_s_tr, lag=6) nw_se_s_tr = sqrt(diag(nw_vcov_s_tr)) #t-stats coef_s_tr = coef(lm_clean_s_tr) t_stat_s_tr = coef_s_tr/nw_se_s_tr #recalculate p-values robust_s_tr = 2*(1-pt(abs(t_stat_s_tr), df = df.residual(lm_clean_s_tr))) 7.2.17 China y_s_ch = cbind(Vdata_s$china, Vdata_s$SPY_vol) colnames(y_s_ch)[1:2] &lt;- c(&quot;china&quot;, &quot;vol&quot;) est.VAR_s_ch &lt;- VAR(y_s_ch,p=6) #extract results mod_vol_s_ch = est.VAR_s_ch$varresult$vol f_s_ch = formula(mod_vol_s_ch) d_s_ch = model.frame(mod_vol_s_ch) lm_clean_s_ch = lm(f_s_ch, data= d_s_ch) #apply Newey-West nw_vcov_s_ch = NeweyWest(lm_clean_s_ch, lag=6) nw_se_s_ch = sqrt(diag(nw_vcov_s_ch)) #t-stats coef_s_ch = coef(lm_clean_s_ch) t_stat_s_ch = coef_s_ch/nw_se_s_ch #recalculate p-values robust_s_ch = 2*(1-pt(abs(t_stat_s_ch), df = df.residual(lm_clean_s_ch))) 7.2.18 #Construct the Robust Omega Matrix L &lt;- 6 nb.sim = 7*7 U_s_ch = residuals(est.VAR_s_ch) T_s_ch = nrow(U_s_ch) Omega_s_ch = matrix(0, ncol(U_s_ch), ncol(U_s_ch)) for(l in 0:L) { weight = 1 - l/(L+1) Gamma_l__s_ch = t(U_s_ch[(l+1):T_s_ch, , drop=FALSE]) %*% U_s_ch[1:(T_s_ch-l), , drop=FALSE] /T_s_ch if (l == 0){ Omega_s_ch = Omega_s_ch + Gamma_l__s_ch } else { Omega_s_ch = Omega_s_ch + weight*(Gamma_l__s_ch + t(Gamma_l__s_ch)) } } #make the B matrix loss_s_ch &lt;- function(param_s_ch){ #Define the restriction B_s_ch &lt;- matrix(c(param_s_ch[1], param_s_ch[2], 0, param_s_ch[3]), ncol = 2) #Make BB&#39; approximatively equal to omega X_s_ch &lt;- Omega_s_ch - B_s_ch %*% t(B_s_ch) #loss function loss_s_ch &lt;- sum(X_s_ch^2) return(loss_s_ch) } res.opt_s_ch &lt;- optim(c(1, 0, 1), loss_s_ch, method = &quot;BFGS&quot;) B.hat_s_ch &lt;- matrix(c(res.opt_s_ch$par[1], res.opt_s_ch$par[2], 0, res.opt_s_ch$par[3]), ncol = 2) 7.2.19 IRF Second Term China #get back the coefficient of est.VAR phi_s_ch &lt;- Acoef(est.VAR_s_ch) PHI_s_ch = make.PHI(phi_s_ch) #take the constant constant_s_ch &lt;- sapply(est.VAR_s_ch$varresult, function(eq) coef(eq)[&quot;const&quot;]) c_s_ch=as.matrix(constant_s_ch) #Simulate the IRF p_s_ch &lt;- length(phi_s_ch) n_s_ch &lt;- dim(phi_s_ch[[1]])[1] Y_s_ch &lt;- simul.VAR(c=c_s_ch, Phi = phi_s_ch, B = B.hat_s_ch, nb.sim ,y0.star=rep(0, n_s_ch*p_s_ch), indic.IRF = 1, u.shock = c(1,0)) #Plot the IRF Yd_s_ch = data.frame( period = 1:nrow(Y_s_ch), response = Y_s_ch[,2]) ggplot(Yd_s_ch,aes(x=period, y=response)) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_line() + theme_light() + ggtitle(&quot;S&amp;P IRF of Second Term China on Volatility&quot;) + ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() 7.3 IRF Cumultative Second Term China ggplot(Yd_s_ch,aes(x=period, y=cumsum(response))) + geom_hline(yintercept = 0, color=&quot;red&quot;) + geom_line() + theme_light() + ggtitle(&quot;S&amp;P Cumulalitve IRF of Second Term China on Volatility&quot;) + ylab(&quot;&quot;)+ xlab(&quot;&quot;) + theme_minimal() 7.4 Tables Terms #first d_f_d_t = d_f_d %&gt;% rename(X.l1 = dummy.l1, X.l2 = dummy.l2, X.l3 = dummy.l3, X.l4 = dummy.l4, X.l5 = dummy.l5, X.l6 = dummy.l6) f_t_f_d &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_f_d &lt;- lm(f_t_f_d, data = d_f_d_t) d_f_n_t = d_f_n %&gt;% rename(X.l1 = N.l1, X.l2 = N.l2, X.l3 = N.l3, X.l4 = N.l4, X.l5 = N.l5, X.l6 = N.l6) f_t_f_n &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_f_n &lt;- lm(f_t_f_n, data = d_f_n_t) d_f_ta_t = d_f_ta %&gt;% rename(X.l1 = tariff.l1, X.l2 = tariff.l2, X.l3 = tariff.l3, X.l4 = tariff.l4, X.l5 = tariff.l5, X.l6 = tariff.l6) f_t_f_ta &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_f_ta &lt;- lm(f_t_f_ta, data = d_f_ta_t) d_f_tr_t = d_f_tr %&gt;% rename(X.l1 = trade.l1, X.l2 = trade.l2, X.l3 = trade.l3, X.l4 = trade.l4, X.l5 = trade.l5, X.l6 = trade.l6) f_t_f_tr &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_f_tr &lt;- lm(f_t_f_tr, data = d_f_tr_t) d_f_ch_t = d_f_ch %&gt;% rename(X.l1 = china.l1, X.l2 = china.l2, X.l3 = china.l3, X.l4 = china.l4, X.l5 = china.l5, X.l6 = china.l6) f_t_f_ch &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_f_ch &lt;- lm(f_t_f_ch, data = d_f_ch_t) nw_se_f_d_t &lt;- sqrt(diag(sandwich::NeweyWest(model_f_d, lag = 6))) nw_se_f_n_t &lt;- sqrt(diag(sandwich::NeweyWest(model_f_n, lag = 6))) nw_se_f_ta_t &lt;- sqrt(diag(sandwich::NeweyWest(model_f_ta, lag = 6))) nw_se_f_tr_t &lt;- sqrt(diag(sandwich::NeweyWest(model_f_tr, lag = 6))) nw_se_f_china_t &lt;- sqrt(diag(sandwich::NeweyWest(model_f_ch, lag = 6))) robust_f_d_t &lt;- 2 * (1-pt(abs(coef(model_f_d) / nw_se_f_d_t), df = df.residual(model_f_d))) robust_f_n_t &lt;- 2 * (1-pt(abs(coef(model_f_n) / nw_se_f_n_t), df = df.residual(model_f_n))) robust_f_ta_t &lt;- 2 * (1-pt(abs(coef(model_f_ta) / nw_se_f_ta_t), df = df.residual(model_f_ta))) robust_f_tr_t &lt;- 2 * (1-pt(abs(coef(model_f_tr) / nw_se_f_tr_t), df = df.residual(model_f_tr))) robust_f_ch_t &lt;- 2 * (1-pt(abs(coef(model_f_ch) / nw_se_f_china_t), df = df.residual(model_f_ch))) nw_se_f_d_t &lt;- nw_se_f_d_t[names(coef(model_f_d))] robust_f_d_t &lt;- robust_f_d_t[names(coef(model_f_d))] nw_se_f_n_t &lt;- nw_se_f_n_t[names(coef(model_f_n))] robust_f_n_t &lt;- robust_f_n_t[names(coef(model_f_n))] nw_se_f_ta_t &lt;- nw_se_f_ta_t[names(coef(model_f_ta))] robust_f_ta_t &lt;- robust_f_ta_t[names(coef(model_f_ta))] nw_se_f_tr_t &lt;- nw_se_f_tr_t[names(coef(model_f_tr))] robust_f_tr_t &lt;- robust_f_tr_t[names(coef(model_f_tr))] nw_se_f_china_t &lt;- nw_se_f_china_t[names(coef(model_f_ch))] robust_f_ch_t &lt;- robust_f_ch_t[names(coef(model_f_ch))] # list of models, SE and p-value models_list_f &lt;- list(model_f_d, model_f_n, model_f_ta, model_f_tr, model_f_ch) robust_ses_f &lt;- list(nw_se_f_d_t, nw_se_f_n_t, nw_se_f_ta_t, nw_se_f_tr_t, nw_se_f_china_t) robust_pvals_f &lt;- list(robust_f_d_t, robust_f_n_t, robust_f_ta_t, robust_f_tr_t, robust_f_ch_t) # Name of coefficient custom_names &lt;- list( &quot;vol.l1&quot; = &quot;$AHV_{t-1}$&quot;, &quot;vol.l2&quot; = &quot;$AHV_{t-2}$&quot;, &quot;vol.l3&quot; = &quot;$AHV_{t-3}$&quot;, &quot;vol.l4&quot; = &quot;$AHV_{t-4}$&quot;, &quot;vol.l5&quot; = &quot;$AHV_{t-5}$&quot;, &quot;vol.l6&quot; = &quot;$AHV_{t-6}$&quot;, &quot;X.l1&quot; = &quot;$X_{t-1}$&quot;, &quot;X.l2&quot; = &quot;$X_{t-2}$&quot;, &quot;X.l3&quot; = &quot;$X_{t-3}$&quot;, &quot;X.l4&quot; = &quot;$X_{t-4}$&quot;, &quot;X.l5&quot; = &quot;$X_{t-5}$&quot;, &quot;X.l6&quot; = &quot;$X_{t-6}$&quot;, &quot;const&quot; = &quot;Constant&quot; ) tmpfile_f &lt;- tempfile(fileext = &quot;.html&quot;) # create temp file # Generate table table_texreg_f &lt;- htmlreg( l = models_list_f, override.se = robust_ses_f, override.pvalues = robust_pvals_f, custom.model.names = c(&quot;TweetDummy&quot;, &quot;TweetCount&quot;, &quot;Tariff&quot;, &quot;Trade&quot;, &quot;China&quot;), custom.coef.map = custom_names, caption = &quot;First-Term VAR Models of Average Hourly Volatility&quot;, label = &quot;tab:VAR_First_Term&quot;, caption.above = TRUE, digits = 6, custom.gof.rows = list(&quot;Shock (IRF)&quot; = c(0.002919, 0.002236, 0.000484, 0.000702, 0.000904)), star.cutoffs = c(0.001, 0.01, 0.05), custom.note = &quot;\\\\parbox[t]{0.9\\\\textwidth}{\\\\small\\\\textit{This table displays VAR regression with only two variables : AHV and X regressor. The column names represent the X variable for the selected model.}}&quot;, file = tmpfile_f ) # Print table cat(readLines(tmpfile_f), sep = &quot;\\n&quot;) First-Term VAR Models of Average Hourly Volatility   TweetDummy TweetCount Tariff Trade China \\(AHV_{t-1}\\) 0.541944*** 0.542426*** 0.543570*** 0.543958*** 0.543471***   (0.074062) (0.074300) (0.074985) (0.075228) (0.074985) \\(AHV_{t-2}\\) -0.113920** -0.113855** -0.115106** -0.115566** -0.115002**   (0.038762) (0.039289) (0.039650) (0.039098) (0.039605) \\(AHV_{t-3}\\) 0.058050* 0.057592* 0.053635* 0.053636* 0.054382*   (0.027504) (0.027211) (0.027121) (0.026885) (0.027488) \\(AHV_{t-4}\\) 0.188383 0.187417 0.184183 0.184102 0.184610   (0.132562) (0.131408) (0.130566) (0.133609) (0.130953) \\(AHV_{t-5}\\) -0.088758 -0.089704 -0.091496 -0.091655 -0.091848   (0.091453) (0.090665) (0.090960) (0.093255) (0.091105) \\(AHV_{t-6}\\) 0.336662*** 0.337701*** 0.343373*** 0.343466*** 0.343184***   (0.049019) (0.048828) (0.048409) (0.048454) (0.048945) \\(X_{t-1}\\) -0.000478*** -0.000163** -0.000454 -0.001838* -0.000352   (0.000133) (0.000055) (0.000352) (0.000715) (0.000375) \\(X_{t-2}\\) -0.000184** -0.000063* -0.000289 0.000221 -0.000048   (0.000069) (0.000029) (0.000274) (0.000520) (0.000233) \\(X_{t-3}\\) -0.000693*** -0.000263*** -0.001007*** -0.000949** -0.001412***   (0.000160) (0.000064) (0.000269) (0.000301) (0.000373) \\(X_{t-4}\\) -0.000564*** -0.000208** -0.000274 -0.000612 -0.000202   (0.000166) (0.000064) (0.000400) (0.000408) (0.000454) \\(X_{t-5}\\) -0.000435*** -0.000125** -0.000468 -0.000605 -0.000057   (0.000113) (0.000044) (0.000281) (0.000353) (0.000352) \\(X_{t-6}\\) 0.000118 0.000099* 0.000240 -0.000121 0.000275   (0.000118) (0.000047) (0.000344) (0.000412) (0.000370) Constant 0.004020*** 0.003079*** 0.001510*** 0.001657*** 0.001593***   (0.000669) (0.000520) (0.000316) (0.000329) (0.000312) Shock (IRF) 0.002919 0.002236 0.000484 0.000702 0.000904 R2 0.687909 0.687236 0.685341 0.685489 0.685533 Adj. R2 0.687331 0.686657 0.684758 0.684907 0.684951 Num. obs. 7036 7036 7036 7036 7036 7.4.1 VAR Third Table #Second d_s_d_t = d_s_d %&gt;% rename(X.l1 = dummy.l1, X.l2 = dummy.l2, X.l3 = dummy.l3, X.l4 = dummy.l4, X.l5 = dummy.l5, X.l6 = dummy.l6) f_t_s_d &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_s_d &lt;- lm(f_t_s_d, data = d_s_d_t) d_s_n_t = d_s_n %&gt;% rename(X.l1 = N.l1, X.l2 = N.l2, X.l3 = N.l3, X.l4 = N.l4, X.l5 = N.l5, X.l6 = N.l6) f_t_s_n &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_s_n &lt;- lm(f_t_s_n, data = d_s_n_t) d_s_ta_t = d_s_ta %&gt;% rename(X.l1 = tariff.l1, X.l2 = tariff.l2, X.l3 = tariff.l3, X.l4 = tariff.l4, X.l5 = tariff.l5, X.l6 = tariff.l6) f_t_s_ta &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_s_ta &lt;- lm(f_t_s_ta, data = d_s_ta_t) d_s_tr_t = d_s_tr %&gt;% rename(X.l1 = trade.l1, X.l2 = trade.l2, X.l3 = trade.l3, X.l4 = trade.l4, X.l5 = trade.l5, X.l6 = trade.l6) f_t_s_tr &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_s_tr &lt;- lm(f_t_s_tr, data = d_s_tr_t) d_s_ch_t = d_s_ch %&gt;% rename(X.l1 = china.l1, X.l2 = china.l2, X.l3 = china.l3, X.l4 = china.l4, X.l5 = china.l5, X.l6 = china.l6) f_t_s_ch &lt;- as.formula(&quot;y ~ -1 + vol.l1 + vol.l2 + vol.l3 + vol.l4 + vol.l5 + vol.l6 + X.l1 + X.l2 + X.l3 + X.l4 + X.l5 + X.l6 + const&quot;) model_s_ch &lt;- lm(f_t_s_ch, data = d_s_ch_t) nw_se_s_d_t &lt;- sqrt(diag(sandwich::NeweyWest(model_s_d, lag = 6))) nw_se_s_n_t &lt;- sqrt(diag(sandwich::NeweyWest(model_s_n, lag = 6))) nw_se_s_ta_t &lt;- sqrt(diag(sandwich::NeweyWest(model_s_ta, lag = 6))) nw_se_s_tr_t &lt;- sqrt(diag(sandwich::NeweyWest(model_s_tr, lag = 6))) nw_se_s_china_t &lt;- sqrt(diag(sandwich::NeweyWest(model_s_ch, lag = 6))) robust_s_d_t &lt;- 2 * (1-pt(abs(coef(model_s_d) / nw_se_s_d_t), df = df.residual(model_s_d))) robust_s_n_t &lt;- 2 * (1-pt(abs(coef(model_s_n) / nw_se_s_n_t), df = df.residual(model_s_n))) robust_s_ta_t &lt;- 2 * (1-pt(abs(coef(model_s_ta) / nw_se_s_ta_t), df = df.residual(model_s_ta))) robust_s_tr_t &lt;- 2 * (1-pt(abs(coef(model_s_tr) / nw_se_s_tr_t), df = df.residual(model_s_tr))) robust_s_ch_t &lt;- 2 * (1-pt(abs(coef(model_s_ch) / nw_se_s_china_t), df = df.residual(model_s_ch))) nw_se_s_d_t &lt;- nw_se_s_d_t[names(coef(model_s_d))] robust_s_d_t &lt;- robust_s_d_t[names(coef(model_s_d))] nw_se_s_n_t &lt;- nw_se_s_n_t[names(coef(model_s_n))] robust_s_n_t &lt;- robust_s_n_t[names(coef(model_s_n))] nw_se_s_ta_t &lt;- nw_se_s_ta_t[names(coef(model_s_ta))] robust_s_ta_t &lt;- robust_s_ta_t[names(coef(model_s_ta))] nw_se_s_tr_t &lt;- nw_se_s_tr_t[names(coef(model_s_tr))] robust_s_tr_t &lt;- robust_s_tr_t[names(coef(model_s_tr))] nw_se_s_china_t &lt;- nw_se_s_china_t[names(coef(model_s_ch))] robust_s_ch_t &lt;- robust_s_ch_t[names(coef(model_s_ch))] # lists of model, robust SE and p-values models_list_s &lt;- list(model_s_d, model_s_n, model_s_ta, model_s_tr, model_s_ch) robust_ses_s &lt;- list(nw_se_s_d_t, nw_se_s_n_t, nw_se_s_ta_t, nw_se_s_tr_t, nw_se_s_china_t) robust_pvals_s &lt;- list(robust_s_d_t, robust_s_n_t, robust_s_ta_t, robust_s_tr_t, robust_s_ch_t) tmpfile_s &lt;- tempfile(fileext = &quot;.html&quot;) # create temp file # Generate table table_texreg_s &lt;- htmlreg( l = models_list_s, override.se = robust_ses_s, override.pvalues = robust_pvals_s, custom.model.names = c(&quot;TweetDummy&quot;, &quot;TweetCount&quot;, &quot;Tariff&quot;, &quot;Trade&quot;, &quot;China&quot;), custom.coef.map = custom_names, caption = &quot;Second-Term VAR Models of Average Hourly Volatility&quot;, label = &quot;tab:VAR_Second_Term&quot;, caption.above = TRUE, digits = 6, custom.gof.rows = list(&quot;Shock (IRF)&quot; = c(0.014659, 0.013315, 0.010752, -0.005665, 0.013937)), star.cutoffs = c(0.05, 0.01, 0.001), custom.note = &quot;\\\\parbox[t]{0.9\\\\textwidth}{\\\\small\\\\textit{This table displays VAR regression with only two variables : AHV and X regressor. The column names represent the X variable for the selected model.}}&quot;, file = tmpfile_s ) # Print cat(readLines(tmpfile_s), sep = &quot;\\n&quot;) Second-Term VAR Models of Average Hourly Volatility   TweetDummy TweetCount Tariff Trade China \\(AHV_{t-1}\\) 0.299398** 0.299350* 0.294752** 0.301160** 0.274419***   (0.112369) (0.115966) (0.110305) (0.111228) (0.078452) \\(AHV_{t-2}\\) 0.015406 0.013567 0.020667 0.011769 0.031670   (0.043748) (0.045193) (0.038728) (0.043649) (0.028307) \\(AHV_{t-3}\\) 0.076169*** 0.076851*** 0.068749*** 0.072284*** 0.052697   (0.008464) (0.008788) (0.016281) (0.014041) (0.034520) \\(AHV_{t-4}\\) 0.084229 0.085108 0.074401 0.080544 0.035573   (0.067860) (0.070966) (0.079828) (0.066709) (0.100929) \\(AHV_{t-5}\\) 0.013424** 0.010406 0.015342** 0.017631* 0.005467   (0.005076) (0.005958) (0.005363) (0.008269) (0.032198) \\(AHV_{t-6}\\) 0.126612* 0.126324* 0.132056** 0.124277* 0.150909**   (0.050031) (0.050865) (0.049243) (0.051402) (0.051059) \\(X_{t-1}\\) 0.006569 0.000947 0.027028 0.020463 0.154584   (0.010145) (0.001307) (0.028623) (0.029865) (0.138092) \\(X_{t-2}\\) -0.003222** -0.000736 0.008588 0.047163 0.099315   (0.001039) (0.000524) (0.007211) (0.041341) (0.095007) \\(X_{t-3}\\) -0.005538** -0.001637* -0.010306 -0.026631 -0.047690   (0.001707) (0.000717) (0.007584) (0.021348) (0.030038) \\(X_{t-4}\\) 0.002474 0.000136 0.002002 0.019925 -0.020669   (0.004957) (0.000914) (0.002962) (0.031571) (0.012428) \\(X_{t-5}\\) -0.008527* -0.001651 -0.002649 -0.012965 -0.004470   (0.003989) (0.001068) (0.004280) (0.014973) (0.018255) \\(X_{t-6}\\) -0.003594 -0.000627 -0.004279 -0.011100 0.008027   (0.003191) (0.000760) (0.003854) (0.010317) (0.022286) Constant 0.072524** 0.068423** 0.049265** 0.052127*** 0.044027*   (0.024156) (0.021308) (0.015262) (0.014290) (0.017471) Shock (IRF) 0.014659 0.013315 0.010752 -0.005665 0.013937 R2 0.244117 0.240788 0.251263 0.244406 0.285165 Adj. R2 0.224424 0.221009 0.231757 0.224721 0.266543 Num. obs. 512 512 512 512 512 "],["cross.html", "Part 8 Cross-references 8.1 Chapters and sub-chapters 8.2 Captioned figures and tables", " Part 8 Cross-references Cross-references make it easier for your readers to find and link to elements in your book. 8.1 Chapters and sub-chapters There are two steps to cross-reference any heading: Label the heading: # Hello world {#nice-label}. Leave the label off if you like the automated heading generated based on your heading title: for example, # Hello world = # Hello world {#hello-world}. To label an un-numbered heading, use: # Hello world {-#nice-label} or {# Hello world .unnumbered}. Next, reference the labeled heading anywhere in the text using \\@ref(nice-label); for example, please see Chapter 8. If you prefer text as the link instead of a numbered reference use: any text you want can go here. 8.2 Captioned figures and tables Figures and tables with captions can also be cross-referenced from elsewhere in your book using \\@ref(fig:chunk-label) and \\@ref(tab:chunk-label), respectively. See Figure 8.1. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 8.1: Here is a nice figure! Don’t miss Table 8.1. knitr::kable( head(pressure, 10), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 8.1: Here is a nice table! temperature pressure 0 0.0002 20 0.0012 40 0.0060 60 0.0300 80 0.0900 100 0.2700 120 0.7500 140 1.8500 160 4.2000 180 8.8000 "],["404.html", "", " Hello There!"]]
